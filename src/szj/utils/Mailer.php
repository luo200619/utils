<?php
 namespace szj\utils; use PHPMailer\PHPMailer\PHPMailer; use PHPMailer\PHPMailer\Exception;  Class Mailer{  Public $mail = null;  Private $config = [ 'SMTPDebug'=>0, 'Host'=>'smtp.qq.com', 'SMTPSecure'=>'ssl', 'Port'=>465, 'CharSet'=>'UTF-8', 'FromName'=>'思智捷信息科技有限公司', 'Username'=>'', 'Password'=>'', 'From'=>'', 'addAddress'=>'', 'addAttachment'=>'', 'Subject'=>'', 'Body'=>'' ];  Public function __construct($config = []){ $this->config = array_merge($this->config,$config); $this->mail = new PHPMailer(true); }  Public function send($title = '',$content = '',$user = '',$pwd = '',$tomail = '',$port = 465){ if(!empty($title)){ $this->config['Subject'] = $title; } if(!empty($content)){ $this->config['Body'] = $content; } if(!empty($user)){ $this->config['Username'] = $user; $this->config['From'] = $user; } if(!empty($pwd)){ $this->config['Password'] = $pwd; } if(!empty($port)){ $this->config['Port'] = $port; } if(!empty($tomail)){ $this->config['addAddress'] = $tomail; } $result = $this->sendmail(); return $result; }  Public function setConfig($arr = []){ $this->config = array_merge($arr); return $this; }  Public function sendmail(){ try{ $this->mail->isSMTP();  $this->mail->SMTPAuth = true;  $this->mail->isHTML(true);  foreach($this->config as $key=>$val){ if($key == 'addAddress'){ $this->ParseToAddress(); } elseif($key == 'addAttachment'){ $this->ParseToAttachment(); } else { $this->mail->$key = $val; } }  $status = $this->mail->send(); if(empty($status)){ $result = appResult('邮件发送失败'); } else { $result = appResult('邮件发送成功',null,false); } } catch(Exception $err){ $result = appResult($err->errorMessage()); } return $result; }  Public function setAddress($mixed = ''){ $this->config['addAddress'] = $mixed; return $this; }  Private function ParseToAddress(){ $arr = []; if(!empty($this->config['addAddress'])){ if(is_string($this->config['addAddress'])){ $arr = explode(',',$this->config['addAddress']); } elseif(is_array($this->config['addAddress'])){ $arr = $this->config['addAddress']; } foreach($arr as $key=>$val){ $this->mail->addAddress($val); } } return $this; }  Private function ParseToAttachment(){ $arr = []; if(!empty($this->config['addAttachment'])){ if(is_string($this->config['addAttachment'])){ $arr = explode(',',$this->config['addAttachment']); } elseif(is_array($this->config['addAttachment'])){ $arr = $this->config['addAttachment']; } foreach($arr as $key=>$val){ $this->mail->addAttachment($val,$key); } } return $this; }  Public function setContent($html = ''){ $this->config['Body'] = $html; return $this; }  Public function setAccount($username = '',$password = ''){ $this->config['Username'] = $username; $this->config['Password'] = $password; $this->config['From'] = $username; return $this; }  Public function setName($name = 'como'){ $this->config['FromName'] = $name; return $this; }  Public function setCharset($charset = 'UTF-8'){ $this->config['CharSet'] = $charset; return $this; }  Public function setPort($port = 465){ $this->mail->Port = $port; $this->config['Port'] = $port; return $this; }  Public function setSecure($type = 'ssl'){ $this->config['SMTPSecure'] = $type; return $this; }  Public function setHost($host = 'smtp.qq.com'){ $this->config['Host'] = $host; return $this; }  Public function setTitle($title = '邮件主题'){ $this->config['Subject'] = $title; return $this; }  Public function setDebug($type = false){ $this->config['SMTPDebug'] = empty($type)?0:1; return $this; }  Public function setAttach($mixed = ''){ $this->config['addAttachment'] = $mixed; return $this; } }