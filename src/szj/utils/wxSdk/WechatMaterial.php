<?php
 namespace szj\utils\wxSdk;  Class WechatMaterial{  Protected static $uploadTempURL= 'https://api.weixin.qq.com/cgi-bin/media/upload?access_token=%s&type=%s';  Protected static $uploadMaterURL= 'https://api.weixin.qq.com/cgi-bin/material/add_material?access_token=%s&type=%s';  Protected static $getTempURL = 'https://api.weixin.qq.com/cgi-bin/media/get?access_token=%s&media_id=%s';  Protected static $postMaterURL = 'https://api.weixin.qq.com/cgi-bin/material/get_material?access_token=%s';  Protected static $delMaterURL = 'https://api.weixin.qq.com/cgi-bin/material/del_material?access_token=%s';  Protected static $getMaterCountURL = 'https://api.weixin.qq.com/cgi-bin/material/get_materialcount?access_token=%s';  Protected static $postMaterListURL = 'https://api.weixin.qq.com/cgi-bin/material/batchget_material?access_token=%s';  Protected static $typelist=['png'=>'image','jpg'=>'image','jpeg'=>'image','gif'=>'image','mp3'=>'voice','mp4'=>'video'];  Public static function tempUpload($fileName = ''){ $check = self::checkFileExists($fileName); if($check['err']) return $check; try{ $result = curl_post(sprintf(self::$uploadTempURL,getAccessToken(),$check['data']),self::addUploadOptions($fileName)); return self::callBackHanadle($result,'临时素材上传'); } catch(\Exception $err){ return appResult($err->getMessage()); } }  Public static function tempGet($media_id = ''){ try{ $result = curl_get(sprintf(self::$getTempURL,getAccessToken(),$media_id)); return self::callBackHanadle($result,'获取临时素材'); } catch(\Exception $err){ return appResult($err->getMessage()); } }  Public static function materUpload($fileName = ''){ $check = self::checkFileExists($fileName); if($check['err']) return $check; try{ $result = curl_post(sprintf(self::$uploadMaterURL,getAccessToken(),$check['data']),self::addUploadOptions($fileName)); return self::callBackHanadle($result,'永久素材上传'); } catch(\Exception $err){ return appResult($err->getMessage()); } }  Public static function materDel($media_id = 0){ try{ $result = curl_post(sprintf(self::$delMaterURL,getAccessToken()),json_encode(['media_id'=>$media_id])); return self::callBackHanadle($result,'删除永久素材'); } catch(\Exception $err){ return appResult($err->getMessage()); } }  Public static function materTotal(){ try{ $result = curl_get(sprintf(self::$getMaterCountURL,getAccessToken())); return self::callBackHanadle($result,'永久素材总数获取'); } catch(\Exception $err){ return appResult($err->getMessage()); } }  Public static function materList($type = '',$page = 1,$len = 20){ try{ $result = curl_post(sprintf(self::$postMaterListURL,getAccessToken()),json_encode(['type'=>$type,'offset'=>$page - 1,'count'=>$len])); return self::callBackHanadle($result,'数据获取'); } catch(\Exception $err){ return appResult($err->getMessage()); } }  Protected static function callBackHanadle($result = '',$alert = ''){ try{ $result = json_decode($result,true); if($result){ if(empty($result['errcode'])){ return appResult($alert.'成功',$result,false); } else { return appResult($alert.'失败',$result); } } else { return appResult($alert.'成功',$result,false); } } catch(\Exception $err){ return appResult($err->getMessage()); } }  Protected static function checkFileExists($fileName = ''){ if(file_exists($fileName)) $result = self::checkFileType($fileName); else $result = appResult($fileName.'文件不存在,请检查'); return $result; }  Protected static function checkFileType($fileName = ''){ $ext = pathinfo($fileName,PATHINFO_EXTENSION); if(isset(self::$typelist[$ext])) return appResult('SUCCESS',self::$typelist[$ext],false); else return appResult('文件类型不符合要求'); }  Protected static function addUploadOptions($fileName = ''){ if (class_exists('\CURLFile')) { $data = array('media' => new \CURLFile(realpath($fileName))); } else { $data = array('media' => '@' . realpath("smallelife.jpg")); } return $data; } }